<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>cvlab1</title>
    <url>/2022/05/09/cvlab1/</url>
    <content><![CDATA[<h1 id="24位BMP图片转换为灰度图-C语言实现"><a href="#24位BMP图片转换为灰度图-C语言实现" class="headerlink" title="24位BMP图片转换为灰度图(C语言实现)"></a>24位BMP图片转换为灰度图(C语言实现)</h1><h2 id="BMP图格式"><a href="#BMP图格式" class="headerlink" title="BMP图格式"></a>BMP图格式</h2><ul>
<li>BMP格式的文件从文件头到文件尾的信息依次如下所示:<br>(1) bmp文件头:14字节，提供文件的格式，大小等信息。<br>(2) 位图信息头:40字节，文件的尺寸，位平面数，压缩方式，颜色索引等信息<br>(3) 调色板:可以选择的部分，当使用索引来表示信息的时候，索引所对应的就是与其颜色的映射表。<br>(4) 位图数据: 图像数据区<h2 id="灰度转换公式"><a href="#灰度转换公式" class="headerlink" title="灰度转换公式"></a>灰度转换公式</h2></li>
<li><strong>attention</strong>:bmp图片在整个计算机内部所存的像素的信息是按照blue,green,red的形式存放的  </li>
<li>几个灰度转换公式<br>(1) $$gray&#x3D;red 0.229 +green 0.587 +blue 0.114 $$ 在使用的时候可以用整数除法代替，变换之后的公式就是乘一个1000，再除以一个1000<br>(2) 平均值法:$gray&#x3D;(red+green+blue)&#x2F;3$<br>最主要的灰度转换公式最大的区别就在于实现的效果之间存在差异</li>
</ul>
<h2 id="实现方法一：简单方法-C语言实现"><a href="#实现方法一：简单方法-C语言实现" class="headerlink" title="实现方法一：简单方法(C语言实现)"></a>实现方法一：简单方法(C语言实现)</h2><ul>
<li>实现的主要的方法就在于弄懂bmp在计算机里面是如何存储的，特别是针对24位的bmp图片，在24位bmp图片之中是没有调色板的，所以在前面54字节有关bmp图像的一些格式之后，之后的信息都是位图数据，也就是每一个像素点的信息，同时每一个像素点占<strong>1字节</strong>，巧的是char类型也占<strong>1字节</strong>，所以就可以直接用一个buff存前面54字节的位图信息，后面打开文件的指针所指向的内容就是整个位图的信息，就可以开始根据灰度转换公式进行改变。</li>
<li>实现过程之中一些注意事项和主要所用的函数</li>
</ul>
]]></content>
      <categories>
        <category>lab</category>
      </categories>
      <tags>
        <tag>数字图像处理,灰度,bmp</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建博客踩坑指南</title>
    <url>/2022/05/06/%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<h1 id="愉快踩坑之旅"><a href="#愉快踩坑之旅" class="headerlink" title="愉快踩坑之旅"></a>愉快踩坑之旅</h1><h2 id="搭建过程之中的踩坑之路"><a href="#搭建过程之中的踩坑之路" class="headerlink" title="搭建过程之中的踩坑之路"></a>搭建过程之中的踩坑之路</h2><ul>
<li>tips: 本文所有的搭建以及运营博文的平台均为Linux</li>
<li>坑1：在本地已经完成搭建之后，涉及到后续将本地的博客链接到github上此时就会有问题。<br>(1) 当出现无法链接到github，并报2021年开始取消了ssh链接，此时需要使用个人令牌访问github<br>解决方法：在自己的github settings里面找到自己的个人令牌，并按照自己的需求申请所需要的设定令牌的基本的可以使用的时间，建议可以对于自己的博客申请永久，并再<strong>hexo d</strong>之后要求输入自己的github帐号密码的时候，直接在密码的地方键入你的个人令牌。  </li>
<li>申请个人令牌的流程: settings-&gt; Developer settings -&gt; Personal access token</li>
<li>坑2：由于众所周知的原因在推送到github上的时候，有很多时候<strong>hexo d</strong>会出现超时的问题</li>
<li>解决方法，修改设置里面的**_config.yml**文件，一定注意不是主题里面的设置文件，而是你的博客里面的根目录里面的设置文件。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//将你的仓库的地址修改为如下所示的格式，别用https</span><br><span class="line"></span><br><span class="line">git@github.com:YOURNAME/YOURNAME.github.io.git</span><br><span class="line"></span><br><span class="line">//只用将YOURNAME修改为你自己的github帐号的名字即可</span><br></pre></td></tr></table></figure></li>
<li>坑3(其实也可以说是强迫症需要改)</li>
<li>有时候在你<strong>hexo g</strong>之后，可能会出现一堆的warnning，其实警告没多大影响，就是出现几个警告感觉有点难看，随需要更改,相关的警告如下图所示  </li>
<li>很明显，就是node.js出了问题，在使用node -v查看node.js的版本的时候，发现版本是16的版本，就是版本太高了,eg: n v12.28.20 命令可以将node.js的版本降低到你所要的版本即可。<h2 id="主题魔改之路"><a href="#主题魔改之路" class="headerlink" title="主题魔改之路"></a>主题魔改之路</h2></li>
<li>关于修改配置文件的问题<br><strong>别在</strong>原始的配置文件之中修改，出了问题很难再去改，重新建一个**_config.butterfly.yml<strong>文件，把</strong>butterfly** 主题里面的文件复制过来，并放在博客的根目录<br>Linux下拷贝文件到指定的目录的命令如下<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp xxx.yml /home/dcx/blog  #打开所在文件的terminal，并把你想要拷贝的文件xxx移到你想要的目录</span><br></pre></td></tr></table></figure></li>
<li>关于在menu里面修改的问题<br>一定记得，在将menu改为中文之后，并去除#之后，&#x2F;和||之间的空格一定要去除，此时才能呢个访问到指定的界面，否则会报错。如下图的更改格式  </li>
<li>建议不懂前端的，可以没必要把时间浪费在上面，博客是拿来更新的，拿来写的，记录了你的日常的，所以可以直接在根目录中你创建的<strong>yml</strong>文件之中修改，这样即使改错了，也能在后面拿原来的配置文件来修改。推荐几个好用的链接。</li>
<li><a href="https://butterfly.js.org/">一个好用的博客</a><br>我主要是在这里面按照其教程修改自己的博客，在此表示感谢！</li>
<li><a href="https://sm.ms/">一个好用的图床</a><br>在本地弄图片太麻烦了，使用这个图床吧，免费好使</li>
<li><strong>END</strong></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo, 踩坑</tag>
      </tags>
  </entry>
</search>
